#include <bits/stdc++.h>
using namespace std;
void build(vector<int>&vis,vector<int>&vt,int low,int high,int ind){
    if(low==high){
        vis[ind]=vt[low];
        return ;
    }
    int mid=(low+high)/2;
    build(vis,vt,low,mid,2*ind+1);
    build(vis,vt,mid+1,high,2*ind+2);
    vis[ind]=vis[2*ind+1]+vis[2*ind+2];
}
void update(vector<int>&vis,vector<int>&vt,int val,int valind,int low,int high,int ind){
    if(low==high){
        vis[ind]=val;
        return ;
    }
    int mid=(low+high)/2;
    if(valind<=mid)update(vis,vt,val,valind,low,mid,2*ind+1);
    else update(vis,vt,val,valind,mid+1,high,2*ind+2);
    vis[ind]=vis[ind*2+1]+vis[ind*2+2];
}
int query(int l,int r,vector<int>&vis,vector<int>&vt,int low,int high,int ind){
    if(high<l or low>r)return 0;
    if(low>=l and high<=r )return vis[ind];
    int mid=(low+high)/2;
    int left=query(l,r,vis,vt,low,mid,ind*2+1);
    int right=query(l,r,vis,vt,mid+1,high,ind*2+2);
    return left+right;
}
int main() {
	int n;
	cin>>n;
	vector<int>vt(n,0),vis(4*n,0);
	for(int i=0;i<n;i++)cin>>vt[i];
	build(vis,vt,0,n-1,0);
	int val,valind;
	cin>>val>>valind;
	update(vis,vt,val,valind,0,n-1,0);
	int l,r;
	cin>>l>>r;
	cout<<query(l,r,vis,vt,0,n-1,0);
}
